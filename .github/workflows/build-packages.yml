name: Build üèóÔ∏è Packages Ô∏èüì¶

on:
  push:
    branches:
      - main
    paths:
      - 'flake.lock'
      - 'pkgs/**'
  workflow_dispatch:

jobs:
  build-applications:
    name: Build applications üì¶
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        package:
          - defold
          - heynote
          - hyprpicker
          - open-webui
          - station
          - gotosocial
          - owncast
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@v17
        with:
          determinate: true
      - uses: DeterminateSystems/flakehub-cache-action@v1
      - name: Building ${{ matrix.package }} üì¶
        continue-on-error: true
        run: |
          # Try to get license info
          if ! nix eval ".#${{ matrix.package }}.meta.license.spdxId" --raw 2>/dev/null; then
            echo "‚ö†Ô∏è Unfree license detected"
            export NIXPKGS_ALLOW_UNFREE=1
            nix build .#${{ matrix.package }} -L --impure
          else
            echo "‚úÖ Free license detected"
            nix build .#${{ matrix.package }} -L
          fi

  build-large-applications:
    name: Build large applications
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        package:
          - davinci-resolve
          - ollama
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@v17
        with:
          determinate: true
      - uses: DeterminateSystems/flakehub-cache-action@v1
      - name: Building ${{ matrix.package }} üéí
        continue-on-error: true
        run: |
          # Try to get license info
          if ! nix eval ".#${{ matrix.package }}.meta.license.spdxId" --raw 2>/dev/null; then
            echo "‚ö†Ô∏è Unfree license detected"
            export NIXPKGS_ALLOW_UNFREE=1
            nix build .#${{ matrix.package }} -L --impure
          else
            echo "‚úÖ Free license detected"
            nix build .#${{ matrix.package }} -L
          fi

  build-fonts:
    name: Build fonts üî§
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        package:
          - nerd-font-patcher
          - bebas-neue-2014-font
          - bebas-neue-2018-font
          - bebas-neue-pro-font
          - bebas-neue-rounded-font
          - bebas-neue-semi-rounded-font
          - boycott-font
          - commodore-64-pixelized-font
          - digital-7-font
          - dirty-ego-font
          - fixedsys-core-font
          - fixedsys-excelsior-font
          - impact-label-font
          - mocha-mattari-font
          - poppins-font
          - spaceport-2006-font
          - zx-spectrum-7-font
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@v17
        with:
          determinate: true
      - uses: DeterminateSystems/flakehub-cache-action@v1
      - name: Building ${{ matrix.package }} üî§
        continue-on-error: true
        run: |
          # Try to get license info
          if ! nix eval ".#${{ matrix.package }}.meta.license.spdxId" --raw 2>/dev/null; then
            echo "‚ö†Ô∏è Unfree license detected"
            export NIXPKGS_ALLOW_UNFREE=1
            nix build .#${{ matrix.package }} -L --impure
          else
            echo "‚úÖ Free license detected"
            nix build .#${{ matrix.package }} -L
          fi

  build-obs-plugins:
    name: Build OBS Plugins üîå
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        package:
          - obs-aitum-multistream
          - obs-advanced-masks
          - obs-browser-transition
          - obs-dir-watch-media
          - obs-dvd-screensaver
          - obs-freeze-filter
          - obs-markdown
          - obs-media-controls
          - obs-mute-filter
          - obs-noise
          - obs-recursion-effect
          - obs-replay-source
          - obs-retro-effects
          - obs-rgb-levels
          - obs-scale-to-sound
          - obs-scene-as-transition
          - obs-source-clone
          - obs-stroke-glow-shadow
          - obs-transition-table
          - obs-urlsource
          - obs-vertical-canvas
          - obs-vnc
          - obs-webkitgtk
          - pixel-art
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@v17
        with:
          determinate: true
      - uses: DeterminateSystems/flakehub-cache-action@v1
      - name: Building ${{ matrix.package }} üîå
        continue-on-error: true
        run: |
          # Try to get license info
          if ! nix eval ".#${{ matrix.package }}.meta.license.spdxId" --raw 2>/dev/null; then
            echo "‚ö†Ô∏è Unfree license detected"
            export NIXPKGS_ALLOW_UNFREE=1
            nix build .#${{ matrix.package }} -L --impure
          else
            echo "‚úÖ Free license detected"
            nix build .#${{ matrix.package }} -L
          fi