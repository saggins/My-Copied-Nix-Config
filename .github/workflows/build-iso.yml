name: Build üèóÔ∏è ISO üìÄ
on:
  push:
    branches:
      - main
    paths:
      - 'flake.lock'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build-iso:
    name: Build ISO üíøÔ∏è
    runs-on: ubuntu-latest
    outputs:
      ver: ${{ steps.build-iso.outputs.ver }}
    permissions:
      contents: write
      id-token: write
    steps:
    - uses: actions/checkout@v4
    - uses: wimpysworld/nothing-but-nix@main
    - uses: DeterminateSystems/nix-installer-action@v17
      with:
        determinate: true
    - uses: DeterminateSystems/flakehub-cache-action@v1
    - name: Nix Build Ô∏è‚ùÑÔ∏è
      id: build-iso
      run: |
        nix build .#nixosConfigurations.iso-console.config.system.build.isoImage -L
        mkdir iso || true
        ISO=$(head -n1 result/nix-support/hydra-build-products | cut -d'/' -f6)
        VER=$(head -n1 result/nix-support/hydra-build-products | cut -d'-' -f3 | cut -d'.' -f1-3)
        # Set output variable
        echo "ver=v${VER}" >> $GITHUB_OUTPUT
        sudo mv "result/iso/${ISO}" iso/console-${ISO}
        sha256sum "iso/console-${ISO}" > "iso/console-${ISO}.sha256"
        sed -i -r "s/ .*\/(.+)/  \1/g" "iso/console-${ISO}.sha256"
        sudo df -h
    - name: Release ISO üéÅ
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ISO=$(head -n1 result/nix-support/hydra-build-products | cut -d'/' -f6)
        if [ -f "iso/console-${ISO}" ]; then
          gh release create "${{ steps.build-iso.outputs.ver }}" --draft=false --generate-notes
          for artefact in "iso/"*; do
            gh release upload "${{ steps.build-iso.outputs.ver }}" "${artefact}" --clobber
          done
        else
          echo "No ISO found, failing the job"
          exit 1
        fi